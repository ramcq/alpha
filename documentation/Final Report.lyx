#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

Animating Algorithms: Final Report
\layout Author

Steven Cooper (
\family typewriter 
sjc209
\family default 
), Graham Le Page (
\family typewriter 
gpl26
\family default 
),
\newline 
Zhan Li (
\family typewriter 
zrll2
\family default 
), Robert McQueen (
\family typewriter 
ram48
\family default 
),
\newline 
Andrew Medworth (
\family typewriter 
am502
\family default 
), Neofytos Mylona (
\family typewriter 
nm314
\family default 
),
\newline 
Sidath Senanayake (
\family typewriter 
sas58
\family default 
), Alan Treanor (
\family typewriter 
ajit2
\family default 
)
\layout Standard

[Also need:
\layout Itemize

User Guide
\layout Itemize

Developers Guide
\layout Itemize

Finished project logs (Description of modules/testing javadoc etc)
\layout Standard

]
\newline 

\layout Section

Introduction
\layout Standard

This is the final report document for the "Animating Algorithms" (Topic
 8.5) Computer Science Tripos Part IB / Part II (General) group project.The
 authors are the members of group "Alpha", listed individually above.
 This project is being overseen by Steven Hand (
\family typewriter 
\series bold 
smh22@cam.ac.uk
\family default 
\series default 
).
\layout Section

General project overview
\layout Standard

Successes
\layout Itemize

We got on well together as a team, there were no big personality conflicts
 and there was generally a good atmosphere between team members.
 Morale and motivation were always high, even in stressful times such as
 before deadlines.
\layout Itemize

We managed to get all the documentation finished and handed in on time for
 project meetings, never missing a deadline.
\layout Standard

Failures
\layout Itemize

In depth communication between team members was sometimes lacking, as for
 example testers and coders did not link up as well as they might have done
 when testing individual modules.
 However most of the time everybody knew what everybody else was supposed
 to be working on, so knew who to ask if they had a specific problem.
 
\layout Itemize

Time planning was a problem, in that some members of the team spent a lot
 longer working on the project at specific times than other members.
 This was generally down to the fact that before modules had been written
 by the coders, the testers couldstuff not test them very much.
 An improvement to this would be to have the testers do some of the coding
 when they had no testing to do, which would spread the workload out more
 easily.
\layout Itemize

At the first project meeting we had a plan of who was going to be doing
 each job in the team (coders/ testers etc) but we did not have a specific
 task allocation saying for example, who would be coding each module.
 Although this was sorted quickly after the meeting, we should have made
 a plan for this in the specification stage.
\layout Standard

Lessons learned
\layout Itemize

After the first project meeting we made sure that each task had a certain
 person (or people) assigned to it.
 This made sure that all the tasks were completed, and also went some way
 to making sure the workload was spread out as people always had things
 to do.
\layout Itemize

As the project progressed communication became more important, especially
 during the integration and testing stages where people needed to know exactly
 how a module worked, or why it did something a certain way.
 This definitely improved towards the end of the project.
\layout Itemize

As an extention of the merits of communication, we learned that working
 as a team was very important to the success of the project.
 Everyone had to have some idea of what was going on, so that when people
 were unavailable for some reason the whole project did not have to be held
 up.
\layout Section

Summary of work undertaken
\layout Subsection

Graham
\layout Standard

Graham was the manager of the project, and so was in charge of organising
 the rest of the team and making sure that everything got done in time.
 He also had a role as a documenter, producing the User Guide among other
 things.
 
\layout Subsection

Steven
\layout Standard

Steven coded the graph animator module, one of the most challenging parts
 of the project.
\layout Subsection

Richard
\layout Standard

Richard tested the algorithms and the graph animator, as well as doing integrati
on testing on the whole system.
\layout Subsection

Rob
\layout Standard

Rob was heavily involved with the design of the system, coming up with many
 good ideas for how to structure the system.
 He coded the queueing mechanism and the shell and also set up and maintained
 the CVS repositary in his role as librarian.
 
\layout Subsection

Andrew
\layout Standard

Andrew also came up with many design plans for the system.
 He worked tirelessly coding the vector animator and also had a role as
 secretary, where among other things he was involved in making sure documents
 were completed and handed in on time to the right place.
\layout Subsection

Neofytos
\layout Standard

Neofytos was an enthusiastic documenter, and so was involved in writing
 up many of the documents such as the Developers Guide.
 He also wrote the algorithm explanations that appear during animation to
 help explain what the algorithm is doing.
\layout Subsection

Sid
\layout Standard

Sid coded the algorithms and also helped out with the shell.
 He worked well with the other coders making sure that integration went
 relatively smoothly.
 
\layout Subsection

Alan
\layout Standard

Alan tested the vector animator as well as performing various other module
 and integration tests.
\layout Section

Random final report stuff
\layout Standard

The final task is to piece the whole system together, test it and ensure
 that it is adequately documented.
 The user manual should be written throughout the project, as the design
 emerges, but will need to be polished at the end of the project.
\layout Standard

The project manager must submit a final report at the final group meeting,
 which should describe the project's successes and failures, elaborate on
 any lessons learned, and include a summary of the work undertaken by different
 team members in completing the system.
 It is perfectly reasonable for an individual member not to have written
 any code but to have worked specically as a librarian or on documentation
 or testing as long as this was agreed with the other group members and
 is reported in the delivery document.
\newline 

\newline 

\layout Standard

4.4 Personal report
\layout Standard

Each group member must also submit a brief personal report for the final
 review meeting giving details of their individual contribution to the project.
 This should include a representative part of their contribution which might
 be program code or documentation, project management logs or minutes of
 meetings as appropriate.
 It should also give a summary assessment of the contributions made by the
 other members of the group.
 The group and the personal reports will be retained by the overseer and
 forwarded directly to the examiners.
\the_end
